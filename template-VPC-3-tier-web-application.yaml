#######################################################################################################################################
Resources:
  
  VirtualPrivateCloud:
    Description: The VPC inside which all Resources would be created.
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.1.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Application-VPC

  InternetGateway:
    Description: Internet Gateway for the VPC.
    Type: AWS::EC2::InternetGateway
  
  AttachGateway:
    Description: Attach Internet Gateway with the VPC.
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref VirtualPrivateCloud
      InternetGatewayId: ! Ref InternetGateway

  PublicSubnet1:
    Description: Public Subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VirtualPrivateCloud
      CidrBlock: 172.1.1.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Public-Subnet1

  PrivateSubnet1:
    Description: Private Subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VirtualPrivateCloud
      CidrBlock: 172.1.2.0/24
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Private-Subnet1

  WebServer:
    Description: Web-server tier EC2 Instance
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref ApplicationImageId
      InstanceType: !Ref ApplicationInstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref PrivateSubnet1
      SecurityGroupIds:
      - !Ref WebServerSecurityGroup
      - !Ref InternalSSHOnlySecurityGroup
      Tags:
        - Key: Name
          Value: WebServer-Instance

  WebServerSecurityGroup:
    Description: security group allowing the web traffic from across the globe.
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: "Allow HTTP and HTTPS traffic from the open internet."
      VpcId: !Ref VirtualPrivateCloud
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: '80'
          IpProtocol: tcp
          ToPort: '80'
        - CidrIp: 0.0.0.0/0
          FromPort: '443'
          IpProtocol: tcp
          ToPort: '443'
      Tags:
        - Key: Name
          Value: SG-WebServer

  InternalSSHOnlySecurityGroup:
    Description: Security Group allowing users to securely access the instance.
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: "Allow SSh Traffic."
      VpcId: !Ref VirtualPrivateCloud
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'

      Tags:
        - Key: Name  
          Value: SG-SSH-Only

##############################################################################################################

# Define the input parameters

Parameters:

  VPCCidrBlock:
    Description: CIDR Block for VPC.
    Type: String
    Default: "172.1.0.0./16"

  KeyName: 
    Description: A key pair that could be used to accessed the EC2 instance.
    Type: AWS::EC2::KeyPair::KeyName

  ApplicationImageId:
    Description: AMI Id to be used for launching the instance.
    Type: String

  ApplicationInstanceType: 
    Description: Instance type to be launched. Use t2.micro for free tier.
    Type: String
    AllowedValues: 
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    Default: t2.micro
    ConstraintDescription: Must be a valid t2 type instance.

  

      

    
